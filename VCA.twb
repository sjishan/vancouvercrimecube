<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0303.2316                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Choose D2' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
        <calculation class='tableau' formula='&quot;Year&quot;' />
        <members>
          <member value='&quot;Month&quot;' />
          <member value='&quot;Year&quot;' />
          <member value='&quot;CrimeType&quot;' />
          <member value='&quot;NONE&quot;' />
          <member value='&quot;NHood&quot;' />
        </members>
      </column>
      <column caption='Choose D1' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
        <calculation class='tableau' formula='&quot;Month&quot;' />
        <members>
          <member value='&quot;NONE&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Year&quot;' />
          <member value='&quot;CrimeType&quot;' />
          <member value='&quot;NHood&quot;' />
        </members>
      </column>
      <column caption='Choose D3' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;CrimeType&quot;'>
        <calculation class='tableau' formula='&quot;CrimeType&quot;' />
        <members>
          <member value='&quot;NONE&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Year&quot;' />
          <member value='&quot;CrimeType&quot;' />
          <member value='&quot;NHood&quot;' />
        </members>
      </column>
      <column caption='Choose D4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;NHood&quot;'>
        <calculation class='tableau' formula='&quot;NHood&quot;' />
        <members>
          <member value='&quot;NONE&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Year&quot;' />
          <member value='&quot;CrimeType&quot;' />
          <member value='&quot;NHood&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Year&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CrimeType&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;NONE&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Month&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='CRAWDA (NewCube)' inline='true' name='msolap.07sqvq71verglw1dybfrw08fuoeh' version='9.2'>
      <connection authentication='sspi' class='msolap' dbname='NewCube' filename='' server='DESKTOP-9NRD0VC' tablename='CRAWDA'>
        <metadata-records>
          <metadata-record class='dimension'>
            <remote-name>[Crime Type]</remote-name>
            <remote-type>0</remote-type>
            <local-name>[Crime Type]</local-name>
            <remote-alias>[Crime Type]</remote-alias>
            <caption>Crime Type</caption>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DEFAULT_HIERARCHY'>&quot;[Crime Type].[Hierarchy]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='dimension'>
            <remote-name>[Map]</remote-name>
            <remote-type>0</remote-type>
            <local-name>[Map]</local-name>
            <remote-alias>[Map]</remote-alias>
            <caption>Map</caption>
            <aggregation>Count</aggregation>
            <approx-count>1216</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DEFAULT_HIERARCHY'>&quot;[Map].[Point ID]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='dimension'>
            <remote-name>[Measures]</remote-name>
            <remote-type>1</remote-type>
            <local-name>[Measures]</local-name>
            <remote-alias>[Measures]</remote-alias>
            <caption>Measures</caption>
            <local-type>real</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DEFAULT_HIERARCHY'>&quot;[Measures]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='dimension'>
            <remote-name>[Month]</remote-name>
            <remote-type>0</remote-type>
            <local-name>[Month]</local-name>
            <remote-alias>[Month]</remote-alias>
            <caption>Month</caption>
            <aggregation>Count</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DEFAULT_HIERARCHY'>&quot;[Month].[Hierarchy]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='dimension'>
            <remote-name>[Neighbourhood]</remote-name>
            <remote-type>0</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <remote-alias>[Neighbourhood]</remote-alias>
            <caption>Neighbourhood</caption>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DEFAULT_HIERARCHY'>&quot;[Neighbourhood].[Hierarchy]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='dimension'>
            <remote-name>[Year]</remote-name>
            <remote-type>0</remote-type>
            <local-name>[Year]</local-name>
            <remote-alias>[Year]</remote-alias>
            <caption>Year</caption>
            <aggregation>Count</aggregation>
            <approx-count>15</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DEFAULT_HIERARCHY'>&quot;[Year].[Year]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Crime Type].[Crime Type]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Crime Type].[Crime Type]</local-name>
            <parent-name>[Crime Type]</parent-name>
            <remote-alias>[Crime Type].[Crime Type]</remote-alias>
            <caption>Crime Type</caption>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Crime Type].[Crime Type].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Crime Type].[General Type]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Crime Type].[General Type]</local-name>
            <parent-name>[Crime Type]</parent-name>
            <remote-alias>[Crime Type].[General Type]</remote-alias>
            <caption>General Type</caption>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Crime Type].[General Type].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Crime Type].[Hierarchy]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Crime Type].[Hierarchy]</local-name>
            <parent-name>[Crime Type]</parent-name>
            <remote-alias>[Crime Type].[Hierarchy]</remote-alias>
            <caption>Hierarchy</caption>
            <aggregation>Count</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <default>true</default>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Crime Type].[Hierarchy].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Crime Type].[Crime Type].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Crime Type].[Crime Type].[(All)]</local-name>
            <parent-name>[Crime Type].[Crime Type]</parent-name>
            <remote-alias>[Crime Type].[Crime Type].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Crime Type].[Crime Type].[Crime Type]</remote-name>
            <local-name>[Crime Type].[Crime Type].[Crime Type]</local-name>
            <parent-name>[Crime Type].[Crime Type]</parent-name>
            <remote-alias>[Crime Type].[Crime Type].[Crime Type].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Crime Type</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Crime Type].[Crime Type] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Crime Type].[General Type].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Crime Type].[General Type].[(All)]</local-name>
            <parent-name>[Crime Type].[General Type]</parent-name>
            <remote-alias>[Crime Type].[General Type].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Crime Type].[General Type].[General Type]</remote-name>
            <local-name>[Crime Type].[General Type].[General Type]</local-name>
            <parent-name>[Crime Type].[General Type]</parent-name>
            <remote-alias>[Crime Type].[General Type].[General Type].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>General Type</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Crime Type].[General Type] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Crime Type].[Hierarchy].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Crime Type].[Hierarchy].[(All)]</local-name>
            <parent-name>[Crime Type].[Hierarchy]</parent-name>
            <remote-alias>[Crime Type].[Hierarchy].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Crime Type].[Hierarchy].[General Type]</remote-name>
            <local-name>[Crime Type].[Hierarchy].[General Type]</local-name>
            <parent-name>[Crime Type].[Hierarchy]</parent-name>
            <remote-alias>[Crime Type].[Hierarchy].[General Type].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>General Type</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Crime Type].[General Type] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Crime Type].[Hierarchy].[Crime Type]</remote-name>
            <local-name>[Crime Type].[Hierarchy].[Crime Type]</local-name>
            <parent-name>[Crime Type].[Hierarchy]</parent-name>
            <remote-alias>[Crime Type].[Hierarchy].[Crime Type].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Crime Type</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Crime Type].[Crime Type] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Map].[Point ID]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Map].[Point ID]</local-name>
            <parent-name>[Map]</parent-name>
            <remote-alias>[Map].[Point ID]</remote-alias>
            <caption>Point ID</caption>
            <aggregation>Count</aggregation>
            <approx-count>1216</approx-count>
            <contains-null>true</contains-null>
            <default>true</default>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Map].[Point ID].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Map].[Point ID].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Map].[Point ID].[(All)]</local-name>
            <parent-name>[Map].[Point ID]</parent-name>
            <remote-alias>[Map].[Point ID].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Map].[Point ID].[Point ID]</remote-name>
            <local-name>[Map].[Point ID].[Point ID]</local-name>
            <parent-name>[Map].[Point ID]</parent-name>
            <remote-alias>[Map].[Point ID].[Point ID].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Point ID</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1216</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Map].[Point ID] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>[Measures].[Crime List Count]</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crime List Count]</local-name>
            <remote-alias>[Measures].[Crime List Count]</remote-alias>
            <caption>Crime List Count</caption>
            <family>Crime List</family>
            <local-type>integer</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='MEASURE_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;[Crime List].[Crime List Count]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>[Measures].[Polygon ID]</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Polygon ID]</local-name>
            <remote-alias>[Measures].[Polygon ID]</remote-alias>
            <caption>Polygon ID</caption>
            <family>Map</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='MEASURE_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;[Map].[Polygon ID]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>[Measures].[Sub Polygon ID]</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sub Polygon ID]</local-name>
            <remote-alias>[Measures].[Sub Polygon ID]</remote-alias>
            <caption>Sub Polygon ID</caption>
            <family>Map</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='MEASURE_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;[Map].[Sub Polygon ID]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>[Measures].[Longitude]</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <remote-alias>[Measures].[Longitude]</remote-alias>
            <caption>Longitude</caption>
            <family>Map</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='MEASURE_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;[Map].[Longitude]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>[Measures].[Latitude]</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <remote-alias>[Measures].[Latitude]</remote-alias>
            <caption>Latitude</caption>
            <family>Map</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='MEASURE_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;[Map].[Latitude]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Month].[Halves]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month].[Halves]</local-name>
            <parent-name>[Month]</parent-name>
            <remote-alias>[Month].[Halves]</remote-alias>
            <caption>Halves</caption>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Month].[Halves].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Month].[Hierarchy]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month].[Hierarchy]</local-name>
            <parent-name>[Month]</parent-name>
            <remote-alias>[Month].[Hierarchy]</remote-alias>
            <caption>Hierarchy</caption>
            <aggregation>Count</aggregation>
            <approx-count>21</approx-count>
            <contains-null>true</contains-null>
            <default>true</default>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Month].[Hierarchy].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Month].[Month]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month].[Month]</local-name>
            <parent-name>[Month]</parent-name>
            <remote-alias>[Month].[Month]</remote-alias>
            <caption>Month</caption>
            <aggregation>Count</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Month].[Month].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Month].[Season]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month].[Season]</local-name>
            <parent-name>[Month]</parent-name>
            <remote-alias>[Month].[Season]</remote-alias>
            <caption>Season</caption>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Month].[Season].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Halves].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Month].[Halves].[(All)]</local-name>
            <parent-name>[Month].[Halves]</parent-name>
            <remote-alias>[Month].[Halves].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Halves].[Halves]</remote-name>
            <local-name>[Month].[Halves].[Halves]</local-name>
            <parent-name>[Month].[Halves]</parent-name>
            <remote-alias>[Month].[Halves].[Halves].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Halves</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Month].[Halves] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Hierarchy].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Month].[Hierarchy].[(All)]</local-name>
            <parent-name>[Month].[Hierarchy]</parent-name>
            <remote-alias>[Month].[Hierarchy].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Hierarchy].[Halves]</remote-name>
            <local-name>[Month].[Hierarchy].[Halves]</local-name>
            <parent-name>[Month].[Hierarchy]</parent-name>
            <remote-alias>[Month].[Hierarchy].[Halves].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Halves</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Month].[Halves] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Hierarchy].[Season]</remote-name>
            <local-name>[Month].[Hierarchy].[Season]</local-name>
            <parent-name>[Month].[Hierarchy]</parent-name>
            <remote-alias>[Month].[Hierarchy].[Season].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Season</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Month].[Season] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Hierarchy].[Month]</remote-name>
            <local-name>[Month].[Hierarchy].[Month]</local-name>
            <parent-name>[Month].[Hierarchy]</parent-name>
            <remote-alias>[Month].[Hierarchy].[Month].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Month</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Month].[Month] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Month].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Month].[Month].[(All)]</local-name>
            <parent-name>[Month].[Month]</parent-name>
            <remote-alias>[Month].[Month].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Month].[Month]</remote-name>
            <local-name>[Month].[Month].[Month]</local-name>
            <parent-name>[Month].[Month]</parent-name>
            <remote-alias>[Month].[Month].[Month].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Month</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Month].[Month] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Season].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Month].[Season].[(All)]</local-name>
            <parent-name>[Month].[Season]</parent-name>
            <remote-alias>[Month].[Season].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Month].[Season].[Season]</remote-name>
            <local-name>[Month].[Season].[Season]</local-name>
            <parent-name>[Month].[Season]</parent-name>
            <remote-alias>[Month].[Season].[Season].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Season</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Month].[Season] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Building Type]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Building Type]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Building Type]</remote-alias>
            <caption>Building Type</caption>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Building Type].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Direction]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Direction]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Direction]</remote-alias>
            <caption>Direction</caption>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Direction].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Hierarchy]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Hierarchy]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Hierarchy]</remote-alias>
            <caption>Hierarchy</caption>
            <aggregation>Count</aggregation>
            <approx-count>27</approx-count>
            <contains-null>true</contains-null>
            <default>true</default>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Hierarchy].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Income Level]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Income Level]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Income Level]</remote-alias>
            <caption>Income Level</caption>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Income Level].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[NC]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[NC]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[NC]</remote-alias>
            <caption>NC</caption>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[NC].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Nhood]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Nhood]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Nhood]</remote-alias>
            <caption>Nhood</caption>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Nhood].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Population]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Population]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Population]</remote-alias>
            <caption>Population</caption>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Population].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Total Population]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Total Population]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Total Population]</remote-alias>
            <caption>Total Population</caption>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Total Population].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Neighbourhood].[Unemployment Rate]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Neighbourhood].[Unemployment Rate]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>[Neighbourhood].[Unemployment Rate]</remote-alias>
            <caption>Unemployment Rate</caption>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Neighbourhood].[Unemployment Rate].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Building Type].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Building Type].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Building Type]</parent-name>
            <remote-alias>[Neighbourhood].[Building Type].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Building Type].[Building Type]</remote-name>
            <local-name>[Neighbourhood].[Building Type].[Building Type]</local-name>
            <parent-name>[Neighbourhood].[Building Type]</parent-name>
            <remote-alias>[Neighbourhood].[Building Type].[Building Type].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Building Type</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Building Type] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Direction].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Direction].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Direction]</parent-name>
            <remote-alias>[Neighbourhood].[Direction].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Direction].[Direction]</remote-name>
            <local-name>[Neighbourhood].[Direction].[Direction]</local-name>
            <parent-name>[Neighbourhood].[Direction]</parent-name>
            <remote-alias>[Neighbourhood].[Direction].[Direction].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Direction</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Direction] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Hierarchy].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Hierarchy].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Hierarchy]</parent-name>
            <remote-alias>[Neighbourhood].[Hierarchy].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Hierarchy].[Population]</remote-name>
            <local-name>[Neighbourhood].[Hierarchy].[Population]</local-name>
            <parent-name>[Neighbourhood].[Hierarchy]</parent-name>
            <remote-alias>[Neighbourhood].[Hierarchy].[Population].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Population</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Population] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Hierarchy].[Nhood]</remote-name>
            <local-name>[Neighbourhood].[Hierarchy].[Nhood]</local-name>
            <parent-name>[Neighbourhood].[Hierarchy]</parent-name>
            <remote-alias>[Neighbourhood].[Hierarchy].[Nhood].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Nhood</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Nhood] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Income Level].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Income Level].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Income Level]</parent-name>
            <remote-alias>[Neighbourhood].[Income Level].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Income Level].[Income Level]</remote-name>
            <local-name>[Neighbourhood].[Income Level].[Income Level]</local-name>
            <parent-name>[Neighbourhood].[Income Level]</parent-name>
            <remote-alias>[Neighbourhood].[Income Level].[Income Level].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Income Level</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Income Level] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[NC].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[NC].[(All)]</local-name>
            <parent-name>[Neighbourhood].[NC]</parent-name>
            <remote-alias>[Neighbourhood].[NC].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[NC].[NC]</remote-name>
            <local-name>[Neighbourhood].[NC].[NC]</local-name>
            <parent-name>[Neighbourhood].[NC]</parent-name>
            <remote-alias>[Neighbourhood].[NC].[NC].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>NC</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[NC] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Nhood].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Nhood].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Nhood]</parent-name>
            <remote-alias>[Neighbourhood].[Nhood].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Nhood].[Nhood]</remote-name>
            <local-name>[Neighbourhood].[Nhood].[Nhood]</local-name>
            <parent-name>[Neighbourhood].[Nhood]</parent-name>
            <remote-alias>[Neighbourhood].[Nhood].[Nhood].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Nhood</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Nhood] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Population].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Population].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Population]</parent-name>
            <remote-alias>[Neighbourhood].[Population].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Population].[Population]</remote-name>
            <local-name>[Neighbourhood].[Population].[Population]</local-name>
            <parent-name>[Neighbourhood].[Population]</parent-name>
            <remote-alias>[Neighbourhood].[Population].[Population].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Population</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Population] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Total Population].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Total Population].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Total Population]</parent-name>
            <remote-alias>[Neighbourhood].[Total Population].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Total Population].[Total Population]</remote-name>
            <local-name>[Neighbourhood].[Total Population].[Total Population]</local-name>
            <parent-name>[Neighbourhood].[Total Population]</parent-name>
            <remote-alias>[Neighbourhood].[Total Population].[Total Population].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Total Population</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>23</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Total Population] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Unemployment Rate].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Neighbourhood].[Unemployment Rate].[(All)]</local-name>
            <parent-name>[Neighbourhood].[Unemployment Rate]</parent-name>
            <remote-alias>[Neighbourhood].[Unemployment Rate].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Neighbourhood].[Unemployment Rate].[Unemployment Rate]</remote-name>
            <local-name>[Neighbourhood].[Unemployment Rate].[Unemployment Rate]</local-name>
            <parent-name>[Neighbourhood].[Unemployment Rate]</parent-name>
            <remote-alias>[Neighbourhood].[Unemployment Rate].[Unemployment Rate].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Unemployment Rate</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Neighbourhood].[Unemployment Rate] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='hierarchy'>
            <remote-name>[Year].[Year]</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year].[Year]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>[Year].[Year]</remote-alias>
            <caption>Year</caption>
            <aggregation>Count</aggregation>
            <approx-count>15</approx-count>
            <contains-null>true</contains-null>
            <default>true</default>
            <attributes>
              <attribute datatype='string' name='ALL_MEMBER'>&quot;[Year].[Year].[All]&quot;</attribute>
              <attribute datatype='string' name='HIERARCHY_DISPLAY_FOLDER'>&quot;&quot;</attribute>
              <attribute datatype='boolean' name='HIERARCHY_USER'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Year].[Year].[(All)]</remote-name>
            <remote-type>all</remote-type>
            <local-name>[Year].[Year].[(All)]</local-name>
            <parent-name>[Year].[Year]</parent-name>
            <remote-alias>[Year].[Year].[(All)].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>(All)</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='level'>
            <remote-name>[Year].[Year].[Year]</remote-name>
            <local-name>[Year].[Year].[Year]</local-name>
            <parent-name>[Year].[Year]</parent-name>
            <remote-alias>[Year].[Year].[Year].[MEMBER_UNIQUE_NAME]</remote-alias>
            <caption>Year</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>15</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='SQL_COLUMN_NAME'>&quot;NAME( [$Year].[Year] )&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='granularity'>
            <remote-name>Crime List</remote-name>
            <remote-type>0</remote-type>
            <remote-alias>Crime List</remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DIMENSION_GRANULARITY'>&quot;[Crime Type].[Crime Type]&quot;</attribute>
              <attribute datatype='string' name='DIMENSION_UNIQUE_NAME'>&quot;[Crime Type]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='granularity'>
            <remote-name>Crime List</remote-name>
            <remote-type>0</remote-type>
            <remote-alias>Crime List</remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DIMENSION_GRANULARITY'>&quot;[Month].[Month]&quot;</attribute>
              <attribute datatype='string' name='DIMENSION_UNIQUE_NAME'>&quot;[Month]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='granularity'>
            <remote-name>Crime List</remote-name>
            <remote-type>0</remote-type>
            <remote-alias>Crime List</remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DIMENSION_GRANULARITY'>&quot;[Neighbourhood].[Nhood]&quot;</attribute>
              <attribute datatype='string' name='DIMENSION_UNIQUE_NAME'>&quot;[Neighbourhood]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='granularity'>
            <remote-name>Crime List</remote-name>
            <remote-type>0</remote-type>
            <remote-alias>Crime List</remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DIMENSION_GRANULARITY'>&quot;[Year].[Year]&quot;</attribute>
              <attribute datatype='string' name='DIMENSION_UNIQUE_NAME'>&quot;[Year]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='granularity'>
            <remote-name>Map</remote-name>
            <remote-type>0</remote-type>
            <remote-alias>Map</remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DIMENSION_GRANULARITY'>&quot;[Map].[Point ID]&quot;</attribute>
              <attribute datatype='string' name='DIMENSION_UNIQUE_NAME'>&quot;[Map]&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='granularity'>
            <remote-name>Map</remote-name>
            <remote-type>0</remote-type>
            <remote-alias>Map</remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DIMENSION_GRANULARITY'>&quot;[Neighbourhood].[Nhood]&quot;</attribute>
              <attribute datatype='string' name='DIMENSION_UNIQUE_NAME'>&quot;[Neighbourhood]&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select N' datatype='integer' name='[Calculation_493425640582455322]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' datatype-customized='true' name='[Crime List Count]' role='measure' type='quantitative' />
      <column datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column-instance column='[Neighbourhood].[Income Level].[Income Level]' derivation='None' name='[Neighbourhood].[Income Level].[none:Income Level:nk]' pivot='key' type='nominal' />
      <column-instance column='[Neighbourhood].[Nhood].[Nhood]' derivation='None' name='[Neighbourhood].[Nhood].[none:Nhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[Neighbourhood].[Population].[Population]' derivation='None' name='[Neighbourhood].[Population].[none:Population:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year].[Year].[Year]' derivation='None' name='[Year].[Year].[none:Year:nk]' pivot='key' type='nominal' />
      <calculated-members>
        <calculated-member enabled='true' field='[Neighbourhood].[Population].[Population]' formula='[Neighbourhood].[Population].[high]/[Neighbourhood].[Population].[low]' name='High/Low' solve-order='0' type='member' />
        <calculated-member enabled='true' field='[Neighbourhood].[Population].[Population]' formula='[Neighbourhood].[Population].[high]/[Neighbourhood].[Population].[medium]' name='High/Medium' solve-order='0' type='member' />
        <calculated-member enabled='true' field='[Neighbourhood].[Population].[Population]' formula='[Neighbourhood].[Population].[medium]/[Neighbourhood].[Population].[high]' name='Medium/High' solve-order='0' type='member' />
        <calculated-member enabled='true' field='[Neighbourhood].[Population].[Population]' formula='[Neighbourhood].[Population].[medium]/[Neighbourhood].[Population].[low]' name='Medium/Low' solve-order='0' type='member' />
        <calculated-member enabled='true' field='[Neighbourhood].[Population].[Population]' formula='[Neighbourhood].[Population].[low]/[Neighbourhood].[Population].[high]' name='Low/High' solve-order='0' type='member' />
        <calculated-member enabled='true' field='[Neighbourhood].[Population].[Population]' formula='[Neighbourhood].[Population].[low]/[Neighbourhood].[Population].[medium]' name='Low/Medium' solve-order='0' type='member' />
      </calculated-members>
      <layout dim-ordering='ordinal' dim-percentage='0.601279' measure-ordering='ordinal' measure-percentage='0.253731' parameter-percentage='0.144989' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Neighbourhood].[Population].[none:Population:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;[Neighbourhood].[Population].&amp;[low]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Neighbourhood].[Population].&amp;[high]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Neighbourhood].[Population].&amp;[medium]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Neighbourhood].[Income Level].[none:Income Level:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;[Neighbourhood].[Income Level].&amp;[high]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Neighbourhood].[Income Level].&amp;[low]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Neighbourhood].[Income Level].&amp;[medium]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Neighbourhood].[Nhood].[none:Nhood:nk]' type='palette'>
            <map to='#09622a'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Shaughnessy]&quot;</bucket>
            </map>
            <map to='#0d662c'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[South Cambie]&quot;</bucket>
            </map>
            <map to='#126b2e'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[West Point Grey]&quot;</bucket>
            </map>
            <map to='#176f30'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Arbutus Ridge]&quot;</bucket>
            </map>
            <map to='#1b7433'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Kerrisdale]&quot;</bucket>
            </map>
            <map to='#1f7835'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Dunbar-Southlands]&quot;</bucket>
            </map>
            <map to='#237d38'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Oakridge]&quot;</bucket>
            </map>
            <map to='#27823b'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Killarney]&quot;</bucket>
            </map>
            <map to='#2a873d'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Victoria-Fraserview]&quot;</bucket>
            </map>
            <map to='#2d8c40'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Riley Park]&quot;</bucket>
            </map>
            <map to='#319142'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Marpole]&quot;</bucket>
            </map>
            <map to='#3a9648'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Sunset]&quot;</bucket>
            </map>
            <map to='#4a9c50'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Hastings-Sunrise]&quot;</bucket>
            </map>
            <map to='#59a158'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Strathcona]&quot;</bucket>
            </map>
            <map to='#69a761'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Kensington-Cedar Cottage]&quot;</bucket>
            </map>
            <map to='#75ac6a'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Renfrew-Collingwood]&quot;</bucket>
            </map>
            <map to='#81b274'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Kitsilano]&quot;</bucket>
            </map>
            <map to='#8db87e'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Grandview-Woodland]&quot;</bucket>
            </map>
            <map to='#99bd8a'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Mount Pleasant]&quot;</bucket>
            </map>
            <map to='#a5c398'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Fairview]&quot;</bucket>
            </map>
            <map to='#b0c9a6'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[West End]&quot;</bucket>
            </map>
            <map to='#bccfb4'>
              <bucket>&quot;[Neighbourhood].[Nhood].&amp;[Downtown]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Year].[Year].[none:Year:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[Year].[Year].&amp;[2003]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Year].[Year].&amp;[2007]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Year].[Year].&amp;[2013]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Year].[Year].&amp;[2011]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[Year].[Year].&amp;[2008]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[Year].[Year].&amp;[2004]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[Year].[Year].&amp;[2014]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[Year].[Year].&amp;[2012]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Year].[Year].&amp;[2009]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Year].[Year].&amp;[2015]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[Year].[Year].&amp;[2016]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Year].[Year].&amp;[2005]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[Year].[Year].&amp;[2010]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[Year].[Year].&amp;[2006]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='crime_csv_all_years (CrimeList)' inline='true' name='excel-direct.1l1j28m12xxxjx17gf4b61pzli8a' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='S:\740\Data\Tables\Tables\CrimeList.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='crime_csv_all_years' table='[crime_csv_all_years$]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='CrimeType' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='string' name='Month' ordinal='2' />
            <column datatype='string' name='Nhood' ordinal='3' />
            <column datatype='real' name='X' ordinal='4' />
            <column datatype='real' name='Y' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CrimeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CrimeType]</local-name>
            <parent-name>[crime_csv_all_years]</parent-name>
            <remote-alias>CrimeType</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[crime_csv_all_years]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[crime_csv_all_years]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Nhood]</local-name>
            <parent-name>[crime_csv_all_years]</parent-name>
            <remote-alias>Nhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[crime_csv_all_years]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[crime_csv_all_years]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[crime_csv_all_years]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='D2' datatype='string' name='[Calculation_493425640559599632]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
      </column>
      <column caption='D1' datatype='string' name='[Calculation_493425640563347476]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
      </column>
      <column caption='D3' datatype='string' name='[Calculation_493425640564408341]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
      </column>
      <column caption='D4' datatype='string' name='[Calculation_493425640565579799]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 4]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
      </column>
      <column caption='Crime Type' datatype='string' name='[CrimeType]' role='dimension' type='nominal' />
      <column caption='Crime List Count' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_493425640565579799]' derivation='None' name='[none:Calculation_493425640565579799:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.392324' measure-ordering='alphabetic' measure-percentage='0.358209' parameter-percentage='0.249467' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_493425640565579799:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Strathcona&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;West End&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fairview&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Renfrew-Collingwood&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Kitsilano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Kerrisdale&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Grandview-Woodland&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Sunset&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Victoria-Fraserview&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Arbutus Ridge&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;West Point Grey&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Shaughnessy&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Marpole&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Killarney&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Riley Park&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hastings-Sunrise&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;South Cambie&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Oakridge&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Downtown&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Kensington-Cedar Cottage&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dunbar-Southlands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose D2' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
          <calculation class='tableau' formula='&quot;Year&quot;' />
        </column>
        <column caption='Choose D1' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
          <calculation class='tableau' formula='&quot;Month&quot;' />
        </column>
        <column caption='Choose D3' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;CrimeType&quot;'>
          <calculation class='tableau' formula='&quot;CrimeType&quot;' />
        </column>
        <column caption='Choose D4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;NHood&quot;'>
          <calculation class='tableau' formula='&quot;NHood&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CrimeBubble'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Neighbourhood].[Income Level].[Income Level]' derivation='None' name='[Neighbourhood].[Income Level].[none:Income Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Neighbourhood].[Nhood].[Nhood]' derivation='None' name='[Neighbourhood].[Nhood].[none:Nhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-level='0' user:ui-marker='enumerate'>
              <groupfilter function='hierarchy-members' hierarchy='[Neighbourhood].[Nhood]' />
              <groupfilter function='member' level='[Neighbourhood].[Nhood].[Nhood]' member='&quot;[Neighbourhood].[Nhood].&amp;[Downtown]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='858' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Income Level].[none:Income Level:nk]' />
              <size column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]' />
              <text column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]' />
              <lod column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='CrimeGeneralType'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Crime Type].[General Type].[General Type]' derivation='None' name='[Crime Type].[General Type].[none:General Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime Type].[Hierarchy].[General Type]' derivation='None' name='[Crime Type].[Hierarchy].[none:General Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year].[Year].[Year]' derivation='None' name='[Year].[Year].[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-level='0' user:ui-marker='enumerate'>
              <groupfilter function='hierarchy-members' hierarchy='[Year].[Year]' />
              <groupfilter function='member' level='[Year].[Year].[Year]' member='&quot;[Year].[Year].&amp;[2016]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[Hierarchy].[none:General Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]</rows>
        <cols>([msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk] / [msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='CrimePopulation'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose D2' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
              <calculation class='tableau' formula='&quot;Year&quot;' />
            </column>
            <column caption='Choose D1' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
              <calculation class='tableau' formula='&quot;Month&quot;' />
            </column>
            <column caption='Choose D3' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;CrimeType&quot;'>
              <calculation class='tableau' formula='&quot;CrimeType&quot;' />
            </column>
            <column caption='Choose D4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;NHood&quot;'>
              <calculation class='tableau' formula='&quot;NHood&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Neighbourhood].[Population].[Population]' derivation='None' name='[Neighbourhood].[Population].[none:Population:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year].[Year].[Year]' derivation='None' name='[Year].[Year].[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-level='0' user:ui-marker='enumerate'>
              <groupfilter function='hierarchy-members' hierarchy='[Year].[Year]' />
              <groupfilter function='member' level='[Year].[Year].[Year]' member='&quot;[Year].[Year].&amp;[2016]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population].[none:Population:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]</rows>
        <cols>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='CrimeYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Year].[Year].[Year]' derivation='None' name='[Year].[Year].[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-level='0' user:ui-marker='enumerate'>
              <groupfilter function='hierarchy-members' hierarchy='[Year].[Year]' />
              <groupfilter function='member' level='[Year].[Year].[Year]' member='&quot;[Year].[Year].&amp;[2016]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]' value='51' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]</rows>
        <cols>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='DimensionSelection'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
            <datasource caption='crime_csv_all_years (CrimeList)' name='excel-direct.1l1j28m12xxxjx17gf4b61pzli8a' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose D2' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
              <calculation class='tableau' formula='&quot;Year&quot;' />
            </column>
            <column caption='Choose D1' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
              <calculation class='tableau' formula='&quot;Month&quot;' />
            </column>
            <column caption='Choose D3' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;CrimeType&quot;'>
              <calculation class='tableau' formula='&quot;CrimeType&quot;' />
            </column>
            <column caption='Choose D4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;NHood&quot;'>
              <calculation class='tableau' formula='&quot;NHood&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1l1j28m12xxxjx17gf4b61pzli8a'>
            <column caption='D2' datatype='string' name='[Calculation_493425640559599632]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
            </column>
            <column caption='D1' datatype='string' name='[Calculation_493425640563347476]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
            </column>
            <column caption='D3' datatype='string' name='[Calculation_493425640564408341]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
            </column>
            <column caption='D4' datatype='string' name='[Calculation_493425640565579799]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 4]&#13;&#10;WHEN &quot;Month&quot; THEN [Month]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;WHEN &quot;CrimeType&quot; THEN [CrimeType]&#13;&#10;WHEN &quot;NHood&quot; THEN [Nhood]&#13;&#10;END' />
            </column>
            <column caption='Crime Type' datatype='string' name='[CrimeType]' role='dimension' type='nominal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nhood]' role='dimension' type='nominal' />
            <column caption='Crime List Count' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_493425640559599632]' derivation='None' name='[none:Calculation_493425640559599632:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_493425640563347476]' derivation='None' name='[none:Calculation_493425640563347476:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_493425640564408341]' derivation='None' name='[none:Calculation_493425640564408341:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_493425640565579799]' derivation='None' name='[none:Calculation_493425640565579799:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nhood]' derivation='None' name='[none:Nhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Nhood:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Nhood:nk]' member='%null%' />
              <groupfilter from='&quot;Arbutus Ridge&quot;' function='range' level='[none:Nhood:nk]' to='&quot;West Point Grey&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Nhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640565579799:nk]' value='41' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640565579799:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Nhood:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='672' />
                <format attr='maxwidth' value='672' />
                <format attr='minheight' value='376' />
                <format attr='maxheight' value='376' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[sum:Number of Records:qk]</rows>
        <cols>([excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640563347476:nk] / ([excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640559599632:nk] / ([excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640564408341:nk] / [excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640565579799:nk])))</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[CrimeType]</column>
          <column>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[Month]</column>
          <column>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[Nhood]</column>
          <column>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[Year]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='MapVisualization'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Map].[Point ID].[Point ID]' derivation='None' name='[Map].[Point ID].[none:Point ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Neighbourhood].[Nhood].[Nhood]' derivation='None' name='[Neighbourhood].[Nhood].[none:Nhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub Polygon ID]' derivation='None' name='[none:Sub Polygon ID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]' />
              <lod column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]' />
              <lod column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Map].[Point ID].[none:Point ID:nk]' />
              <path column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Sub Polygon ID:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Latitude:qk]</rows>
        <cols>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SeasonGeneral'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Crime Type].[General Type].[General Type]' derivation='None' name='[Crime Type].[General Type].[none:General Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month].[Season].[Season]' derivation='None' name='[Month].[Season].[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Season].[none:Season:nk]' value='155' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]</rows>
        <cols>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Season].[none:Season:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='SeasonYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Month].[Season].[Season]' derivation='None' name='[Month].[Season].[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year].[Year].[Year]' derivation='None' name='[Year].[Year].[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-level='0' user:ui-marker='enumerate'>
              <groupfilter function='hierarchy-members' hierarchy='[Year].[Year]' />
              <groupfilter from='&quot;[Year].[Year].&amp;[2016]&quot;' function='range' level='[Year].[Year].[Year]' to='&quot;[Year].[Year].[All].UNKNOWNMEMBER&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Season].[none:Season:nk]' value='139' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='556' />
                <format attr='maxwidth' value='556' />
                <format attr='minheight' value='334' />
                <format attr='maxheight' value='334' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]</rows>
        <cols>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Season].[none:Season:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='SelectN'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
          </datasources>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Neighbourhood].[Nhood].[Nhood]' derivation='None' name='[Neighbourhood].[Nhood].[none:Nhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_493425640582455322]' derivation='None' name='[none:Calculation_493425640582455322:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]' direction='DESC' using='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]' />
          <filter class='quantitative' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Calculation_493425640582455322:qk:5]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Calculation_493425640582455322:qk:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='541' />
                <format attr='maxwidth' value='541' />
                <format attr='minheight' value='440' />
                <format attr='maxheight' value='440' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]</rows>
        <cols>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='CRAWDA (NewCube)' name='msolap.07sqvq71verglw1dybfrw08fuoeh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose D2' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
              <calculation class='tableau' formula='&quot;Year&quot;' />
            </column>
            <column caption='Choose D1' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
              <calculation class='tableau' formula='&quot;Month&quot;' />
            </column>
            <column caption='Choose D3' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;CrimeType&quot;'>
              <calculation class='tableau' formula='&quot;CrimeType&quot;' />
            </column>
            <column caption='Choose D4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;NHood&quot;'>
              <calculation class='tableau' formula='&quot;NHood&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='msolap.07sqvq71verglw1dybfrw08fuoeh'>
            <column-instance column='[Crime Type].[General Type].[General Type]' derivation='None' name='[Crime Type].[General Type].[none:General Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Neighbourhood].[Population].[Population]' derivation='None' name='[Neighbourhood].[Population].[none:Population:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime List Count]' derivation='None' name='[none:Crime List Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-level='0' user:ui-marker='enumerate'>
              <groupfilter function='hierarchy-members' hierarchy='[Neighbourhood].[Population]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Neighbourhood].[Population].[Population]' member='&quot;[Neighbourhood].[Population].[All].UNKNOWNMEMBER&quot;' />
                <groupfilter function='member' level='[Neighbourhood].[Population].[Population]' member='&quot;[Neighbourhood].[Population].&amp;[medium]&quot;' />
                <groupfilter function='member' level='[Neighbourhood].[Population].[Population]' member='&quot;[Neighbourhood].[Population].&amp;[low]&quot;' />
                <groupfilter function='member' level='[Neighbourhood].[Population].[Population]' member='&quot;[Neighbourhood].[Population].&amp;[high]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population].[none:Population:nk]' value='98' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]</rows>
        <cols>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population].[none:Population:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='48'>
    <window class='worksheet' name='DimensionSelection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Nhood:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640559599632:nk]</field>
            <field>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640562950163:nk]</field>
            <field>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640564408341:nk]</field>
            <field>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Calculation_493425640565579799:nk]</field>
            <field>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:CrimeType:nk]</field>
            <field>[excel-direct.1l1j28m12xxxjx17gf4b61pzli8a].[none:Nhood:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[:Measure Names]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Month].[none:Month:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Calculation_493425640555683848:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:New Member 1:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:c3:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MapVisualization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Crime List Count:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Map].[Point ID].[none:Point ID:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CrimeYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CrimePopulation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population].[none:Population:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population].[none:Population:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CrimeGeneralType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[Hierarchy].[none:General Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[Hierarchy].[none:General Type:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SeasonGeneral'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Season].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='SeasonYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='151'>
            <card param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year]' type='filter' />
          </strip>
          <strip size='218'>
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Hierarchy].[none:Season:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Month].[Season].[none:Season:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Year].[Year].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CrimeBubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Income Level].[none:Income Level:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Income Level].[none:Income Level:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SelectN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='259'>
            <card param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[none:Calculation_493425640582455322:qk:5]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Nhood].[none:Nhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Crime Type].[General Type].[none:General Type:nk]</field>
            <field>[msolap.07sqvq71verglw1dybfrw08fuoeh].[Neighbourhood].[Population].[none:Population:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='DimensionSelection' width='192'>
      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
      gxPn6ejs5P8DxRRvZSpOBtQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MapVisualization' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CrimeYear' width='192'>
      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
      JSU37QH+Hzg/QZH9myhyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CrimePopulation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CrimeGeneralType' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='SeasonGeneral' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SeasonYear' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='CrimeBubble' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SelectN' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
